// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model AttributeMultiplier {
  id         Int           @id @default(autoincrement())
  attribute  AttributeName @unique
  multiplier Float
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Employee {
  id        Int        @id @default(autoincrement())
  clerkId   String     @unique
  name      String
  avatarUrl String?
  email     String     @unique
  phone     String?
  customers Customer[]
}

model PastOperation {
  id            Int       @id @default(autoincrement())
  customerId    Int
  description   String
  operationDate DateTime?
  customer      Customer  @relation(fields: [customerId], references: [id])
}

model Customer {
  cardiacIssues           Boolean?
  diabeticCondition       Boolean?
  hypertension            Boolean?
  cardiacIssuesScore      Int?
  diabeticConditionScore  Int?
  hypertensionScore       Int?
  step                    Int?
  bmiScore                Int?
  smokeScore              Int?
  jobScore                Int?
  addressScore            Int?
  ageScore                Int?
  insuranceSumScore       Int?
  durationScore           Int?
  genderScore             Int?
  id                      Int                @id @default(autoincrement())
  name                    String?
  address                 String?
  birthdate               DateTime?
  smoking                 Boolean?
  bmi                     Float?
  job                     String?
  employeeId              Int?
  insuranceSum            Float?
  recommendedInsuranceSum Float?
  duration                Int?
  premium                 Float?
  status                  Status?            @default(draft)
  requestDate             DateTime           @default(now())
  email                   String?            @unique
  gender                  Gender?
  decisiveFactor          DecisiveFactor?
  idDocument              String[]           @default([])
  trafficLightColor       TrafficLightColor?
  documents               Document[]
  employee                Employee?          @relation(fields: [employeeId], references: [id])
  pastOperation           PastOperation[]
  medicalHistory          MedicalHistory?
}

model Document {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  fileUrl    String?
  uploadDate DateTime @default(now())
  title      String
}

model Job {
  id   Int    @id @default(autoincrement())
  name String
}

model MedicalHistory {
  id         BigInt   @id @default(autoincrement())
  customerId Int      @unique
  customer   Customer @relation(fields: [customerId], references: [id])

  hasChronicIllnesses  Boolean @default(false)
  chronicIllnessesInfo String?

  wasHospitalized     Boolean @default(false)
  hospitalizationInfo String?

  hasSeriousIllnesses  Boolean @default(false)
  seriousIllnessesInfo String?

  takesMedication Boolean @default(false)
  medicationInfo  String?
}

enum Status {
  draft
  waiting_for_counter_offer
  requesting_documents
  waiting_for_documents
  review_documents
  accepted
  rejected
  accepted_with_conditions
}

enum Gender {
  male
  female
}

enum DecisiveFactor {
  score
  healthCheck
}

enum TrafficLightColor {
  green
  orange
  red
}

model RiskThreshold {
  id        Int      @id @default(autoincrement())
  greenMax  Float // Max score for Green category
  orangeMax Float // Max score for Orange category
  createdAt DateTime @default(now())
  // Anything above orangeMax will automatically be categorized as Red
}

enum AttributeName {
  AGE
  BMI
  SMOKING
  INSURANCE_SUM
  DURATION
  CARDIAC_ISSUES
  DIABETIC_CONDITION
  HYPERTENSION
}
